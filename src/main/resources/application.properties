spring.config.import=env.properties
# Database connection
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${datasource.url}
spring.datasource.username=${datasource.username}
spring.datasource.password=${datasource.password}

# Hibernate config
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.hbm2ddl.auto=none
spring.jpa.properties.hibernate.show_sql=true

# Hidden methods
spring.mvc.hiddenmethod.filter.enabled=true

#Liquibase
spring.liquibase.enabled=true
spring.liquibase.url=${datasource.url}
spring.liquibase.user=${datasource.username}
spring.liquibase.password=${datasource.password}
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml

#OAuth2 VK
spring.security.oauth2.client.provider.vk.authorization-uri=https://oauth.vk.com/authorize?revoke=1
spring.security.oauth2.client.provider.vk.token-uri=https://oauth.vk.com/access_token
spring.security.oauth2.client.provider.vk.user-info-uri=https://api.vk.com/method/users.get?v=5.131&fields=bdate
spring.security.oauth2.client.provider.vk.user-name-attribute=first_name
spring.security.oauth2.client.registration.vk.client-id=${vk.client-id}
spring.security.oauth2.client.registration.vk.client-secret=${vk.client-secret}
spring.security.oauth2.client.registration.vk.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.vk.client-authentication-method=post
spring.security.oauth2.client.registration.vk.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.vk.scope=email

#OAuth2 Google
spring.security.oauth2.client.registration.google.client-id=${google.client-id}
spring.security.oauth2.client.registration.google.client-secret=${google.client-secret}

